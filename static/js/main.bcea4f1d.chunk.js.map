{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","About","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAEMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC1B,OAAQ,wBAAQA,QAASA,EAASC,MAAQ,CAACC,gBAAiBJ,GAAQK,UAAU,MAAtE,SAA6EJ,KAGzFF,EAAOO,aAAe,CAClBN,MAAO,aASID,QCbTQ,EAAS,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACrBC,EAAWC,cAEjB,OACI,yBAAQP,UAAU,SAAlB,UACI,6BAAKG,IACkB,MAAtBG,EAASE,UAAmB,cAAC,EAAD,CAAQb,MAAOU,EAAU,MAAQ,QAAST,KAAMS,EAAU,QAAU,MAAOR,QAASO,QAK7HF,EAAOD,aAAe,CAClBE,MAAO,gB,YCoBIM,I,OCxBAC,IC0FAC,EA7FH,WAAO,IAAD,EACsBC,oBAAS,GAD/B,gCAEUA,mBAAS,KAFnB,6BAsFhB,OACE,eAAC,IAAD,WACC,oCADD,WCnFWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bcea4f1d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (<button onClick={onClick} style ={{backgroundColor: color}} className='btn'>{text}</button>)\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './Button'\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' &&<Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n//CSS in JS\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'yellow',\r\n// }\r\n\r\nexport default Header\r\n","import { FaTrash } from \"react-icons/fa\";\r\nimport { FaPencilAlt } from \"react-icons/fa\";\r\nimport { useState } from \"react\";\r\nimport EditTask from \"./EditTask\";\r\n\r\nfunction Task({ task, onDelete, onToggle, onEdit }) {\r\n  const [editFlag, setEditFlag] = useState(true);\r\n  const invertEdit = () => {\r\n    setEditFlag(!editFlag);\r\n  };\r\n  if (editFlag) {\r\n    return (\r\n      <div className={`task ${task.reminder ? \"reminder\" : \"\"}`}>\r\n        <h3>\r\n          {task.text}\r\n          <div>\r\n            <FaPencilAlt\r\n              className=\"pencil-icon\"\r\n              onClick={() => invertEdit(task.id)}\r\n              style={{ color: \"green\", cursor: \"pointer\" }}\r\n            />\r\n            <FaTrash\r\n              onClick={() => onDelete(task.id)}\r\n              style={{ color: \"red\", cursor: \"pointer\" }}\r\n            />\r\n          </div>\r\n        </h3>\r\n        <p onClick={() => onToggle(task.id)}>{task.day}</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (<EditTask task={task} onEdit={onEdit} invertEdit={invertEdit} reminder={task.reminder} />);\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import { Link } from 'react-router-dom'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h4>Version 0.0.1</h4>\r\n            <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport Footer from \"./components/Footer\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddTask from \"./components/AddTask\";\nimport About from \"./components/About\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  // useEffect(() => {\n  //   fetch(\"https://task-tracker-react-flask.herokuapp.com/api/tasks\")\n  //     .then((res) => res.json())\n  //     .then((data) => {\n  //       setTasks(data.task);\n  //     });\n  //     console.log('fetched')\n  // }, []);\n\n  // //Fetch Task\n  // const fetchTask = async (id) => {\n  //   const res = await fetch(`/tasks/${id}`);\n  //   const data = await res.json();\n  //   return data;\n  // };\n\n  // //Delete Task\n  // const deleteTask = async (id) => {\n  //   await fetch(`/tasks/${id}`, {\n  //     method: \"DELETE\",\n  //   });\n  //   setTasks(tasks.filter((task) => task.id !== id));\n  // };\n\n  // //Toggle Reminder\n  // const toggleReminder = async (id) => {\n  //   const taskToToggle = await fetchTask(id);\n  //   const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n  //   const res = await fetch(`/tasks/${id}`, {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(updTask),\n  //   });\n  //   const data = await res.json();\n  //   setTasks(\n  //     tasks.map((task) =>\n  //       task.id === id ? { ...task, reminder: data.reminder } : task\n  //     )\n  //   );\n  // };\n\n  // //Edit Task\n  // const onEdit = async (id, task) => {\n  //   const taskToEdit = await fetchTask(id);\n  //   const updTask = { ...taskToEdit, text: task.text, day: task.day };\n  //   const res = await fetch(`/tasks/${id}`, {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(updTask),\n  //   });\n  //   const data = await res.json();\n  //   setTasks(\n  //     tasks.map((task) =>\n  //       task.id === id ? { ...task, text: data.text, day: data.day } : task\n  //     )\n  //   );\n  // };\n\n  // //Add Task\n  // const addTask = async (task) => {\n  //   const res = await fetch(\n  //     \"https://task-tracker-react-flask.herokuapp.com/api/tasks/add\",\n  //     {\n  //       method: \"PUT\",\n  //       headers: {\n  //         \"Content-type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(task),\n  //     }\n  //   );\n  //   const data = await res.json();\n  //   console.log(data);\n\n  //   setTasks([...tasks, data]);\n\n  //   setShowAddTask(!showAddTask);\n  // };\n\n  return (\n    <Router>\n     <h1>\nHi</h1>    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}